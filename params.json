{"name":"Gofreegeoip","tagline":"Provides access to Freegeoip.net using GO","body":"gofreegeoip\r\n===========\r\n\r\nProvides access to [Freegeoip.net](https://freegeoip.net/?q=8.8.8.8) using GO\r\n\r\nFreegeoip provides an API which can give results via, XML, JSON and CSV. This app uses the JSON interface.\r\n\r\nfreegeoip.net/{format}/{IP_or_hostname}\r\n\r\nYou are limited to *10,000* calls per hour. If this is not enough you have to provide your own server! ;-) In which case see the [Github project here.](https://github.com/fiorix/freegeoip)\r\n\r\n###Command Line interface\r\n\r\n```shell\r\ngo run main.go -s freegeoip.net -a 8.8.8.8\r\n```\r\n\r\n######Command Line Switches\r\n\r\n-\t-s server, Enter the IP address (IP:PORT) for the query server, leave blank for freegeoip.net\r\n\r\n-\t-a ip, Enter the IP address for the location you wish to quiery, leave blank for this External WAN IP\r\n\r\nThis will return two items a Location array and a status, which complies with HTTP status codes, defined in RFC 2616.\r\n\r\n```\r\nLocation array\r\n    {\r\n      IP\r\n  \tCountryCode\r\n  \tCountryName\r\n  \tRegionCode  \r\n  \tRegionName  \r\n  \tCity\r\n  \tZipCode\r\n  \tTimeZone\r\n  \tLatitude\r\n  \tLongitude\r\n  \tMetroCode\r\n    }\r\n```\r\n\r\n```\r\nStatus codes\r\n        StatusOK                   = 200\r\n        StatusForbidden            = 403 (Returned when you exceed your API allowance)\r\n        StatusNotFound             = 404\r\n```\r\n\r\n###Library call\r\n\r\n*Example of call from code.*\r\n\r\n```Go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/danward79/gofreegeoip\"\r\n)\r\n\r\nfunc main() {\r\n\r\n  loc, status := gofreegeoip.Query(\"freegeoip.net\", \"8.8.8.8\")\r\n\r\n\tfmt.Printf(\"%+v\", loc)\r\n\tfmt.Println(status)\r\n}\r\n```\r\n\r\nTODO - Quiery Timeout handling\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}